<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jiuzhi.etl</groupId>
	<artifactId>etl</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>

	<modules>
		<module>etl-sdk</module>
		<module>etl-fad</module>
		<module>etl-recommend</module>
		<module>etl-yaya</module>
		<module>etl-yyxq</module>
	</modules>

	<properties>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<java.version>1.7</java.version>
		<scala.version>2.11.8</scala.version>
		<scala.compat.version>2.11</scala.compat.version>
		<hadoop.version>2.7.3</hadoop.version>
		<hbase.version>1.2.6</hbase.version>
		<spark.version>2.1.1</spark.version>
		<kafka.version>0.10.2.1</kafka.version>
		<phoenix.version>4.10.0-HBase-1.1</phoenix.version>
		<mysql.version>5.1.38</mysql.version>
		<commons-configuration.version>1.10</commons-configuration.version>
		<sched-spark.version>0.0.1</sched-spark.version>
		<jedis.version>2.9.0</jedis.version>
		<junit.version>4.12</junit.version>
	</properties>

	<dependencies>
		<!-- java -->
		<dependency>
			<groupId>jdk.tools</groupId>
			<artifactId>jdk.tools</artifactId>
			<version>${java.version}</version>
			<scope>system</scope>
			<systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>
		</dependency>

		<!-- scala -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.specs2</groupId>
			<artifactId>specs2-core_${scala.compat.version}</artifactId>
			<version>2.4.16</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.compat.version}</artifactId>
			<version>2.2.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- spark -->
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-core_${scala.compat.version}</artifactId>
				<version>${spark.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>hadoop-client</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hadoop-mapreduce-client-app</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hadoop-mapreduce-client-core</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
					<exclusion>
						<artifactId>chill-java</artifactId>
						<groupId>com.twitter</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-hive_${scala.compat.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-streaming_${scala.compat.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>

			<!-- hadoop -->
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-mapreduce-client-core</artifactId>
				<version>${hadoop.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-mapreduce-client-common</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>hadoop-mapreduce-client-core</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-common</artifactId>
				<version>${hadoop.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-hdfs</artifactId>
				<version>${hadoop.version}</version>
			</dependency>

			<!-- hbase -->
			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-common</artifactId>
				<version>${hbase.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>hadoop-mapreduce-client-core</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-server</artifactId>
				<version>${hbase.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>hadoop-mapreduce-client-core</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- kafka -->
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka_2.11</artifactId>
				<version>${kafka.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka.version}</version>
			</dependency>

			<!-- phoenix -->
			<dependency>
				<groupId>org.apache.phoenix</groupId>
				<artifactId>phoenix-core</artifactId>
				<version>${phoenix.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.phoenix</groupId>
				<artifactId>phoenix-spark</artifactId>
				<version>${phoenix.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<artifactId>hadoop-client</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hadoop-mapreduce-client-jobclient</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hadoop-mapreduce-client-shuffle</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hadoop-mapreduce-client-app</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hadoop-yarn-api</artifactId>
						<groupId>org.apache.hadoop</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- db -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>

			<!-- commons -->
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons-configuration.version}</version>
			</dependency>

			<!-- schedule -->
			<dependency>
				<groupId>org.zc.sched</groupId>
				<artifactId>sched-spark</artifactId>
				<version>${sched-spark.version}</version>
			</dependency>

			<!-- jedis -->
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${jedis.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- see http://davidb.github.com/scala-maven-plugin -->
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.2.0</version>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>testCompile</goal>
							</goals>
							<configuration>
								<args>
									<!-- <arg>-make:transitive</arg> -->
									<arg>-dependencyfile</arg>
									<arg>${project.build.directory}/.scala_dependencies</arg>
								</args>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<useFile>false</useFile>
						<disableXmlReport>true</disableXmlReport>
						<!-- If you have classpath issue like NoDefClassError,... -->
						<!-- useManifestOnlyJar>false</useManifestOnlyJar -->
						<includes>
							<include>**/*Test.*</include>
							<include>**/*Suite.*</include>
						</includes>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<url>http://192.168.1.196:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>nexus-releases</id>
			<url>http://192.168.1.196:8081/nexus/content/repositories/releases</url>
		</repository>
	</distributionManagement>
</project>